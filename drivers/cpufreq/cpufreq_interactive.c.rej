--- drivers/cpufreq/cpufreq_interactive.c
+++ drivers/cpufreq/cpufreq_interactive.c
@@ -55,7 +55,6 @@
 	unsigned int max_freq;
 	u64 floor_validate_time;
 	u64 hispeed_validate_time;
-	u64 max_freq_idle_start_time;
 	struct rw_semaphore enable_sem;
 	int governor_enabled;
 };
@@ -128,12 +127,6 @@
 #define DEFAULT_TIMER_SLACK (4 * DEFAULT_TIMER_RATE)
 static int timer_slack_val = DEFAULT_TIMER_SLACK;
 
-/*
- * Stay at max freq for at least max_freq_hysteresis before dropping
- * frequency.
- */
-static unsigned int max_freq_hysteresis;
-
 static bool io_is_busy;
 
 /* Round to starting jiffy of next evaluation window */
@@ -526,20 +508,6 @@
 		if (!pending) {
 			pcpu->last_evaluated_jiffy = get_jiffies_64();
 			cpufreq_interactive_timer_resched(smp_processor_id());
-
-			/*
-			 * If timer is cancelled because CPU is running at
-			 * policy->max, record the time CPU first goes to
-			 * idle.
-			 */
-			now = ktime_to_us(ktime_get());
-			if (max_freq_hysteresis) {
-				spin_lock_irqsave(&pcpu->target_freq_lock,
-						  flags);
-				pcpu->max_freq_idle_start_time = now;
-				spin_unlock_irqrestore(&pcpu->target_freq_lock,
-						       flags);
-			}
 		}
 	}
 
@@ -1043,7 +988,6 @@
 	&timer_slack.attr,
 	&boostpulse_duration.attr,
 	&io_is_busy_attr.attr,
-	&max_freq_hysteresis_attr.attr,
 	NULL,
 };
 
